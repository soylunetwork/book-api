name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test on JDK ${{ matrix.java }}

    strategy:
      matrix:
        java: [21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-reports-${{ matrix.java }}
          path: build/reports/tests/test/

  build:
    needs: test
    runs-on: ubuntu-latest
    name: Build and Package

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate Javadoc
        run: ./gradlew javadoc

      - name: Build Shadow JAR
        run: ./gradlew shadowJar

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/docs/javadoc/

      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: book-api-jar
          path: build/libs/book-api-*.jar

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    name: Publish Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build for release
        run: ./gradlew build shadowJar

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Book API v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Book API v${{ steps.get_version.outputs.VERSION }}
            
            ### Değişiklikler
            - Ayrıntılı değişiklikler için commit geçmişine bakın
            
            ### İndirmeler
            - **book-api-${{ steps.get_version.outputs.VERSION }}.jar** - Ana kütüphane JAR dosyası
            - **book-api-${{ steps.get_version.outputs.VERSION }}-sources.jar** - Kaynak kodu
            - **book-api-${{ steps.get_version.outputs.VERSION }}-javadoc.jar** - Javadoc dokümantasyonu
            
            ### Kurulum
            1. JAR dosyasını indirin
            2. Projenizin bağımlılıklarına ekleyin
            3. API’yi eklentinizin onEnable() metodunda başlatın
            
            ### Uyumluluk
            - Minecraft 1.21.4+
            - Java 21+
            - Spigot/Paper

          draft: false
          prerelease: false

      - name: Upload Release Asset - Main JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/book-api-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: book-api-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Upload Release Asset - Sources JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/book-api-${{ steps.get_version.outputs.VERSION }}-sources.jar
          asset_name: book-api-${{ steps.get_version.outputs.VERSION }}-sources.jar
          asset_content_type: application/java-archive

      - name: Upload Release Asset - Javadoc JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/book-api-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
          asset_name: book-api-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
          asset_content_type: application/java-archive

  publish-packages:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    name: Publish to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}